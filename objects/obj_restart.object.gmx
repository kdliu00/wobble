<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>randomize();

highscorePosted = false;

first = false;
coinsCollected = global.coinAdd;
prevCoins = global.coins

adShown = false;

scr_save();

instance_create(133, y + 157, obj_xpBar);

image_alpha = 0;

coinDelay = 1;

fadeTime = 1.5 * room_speed;
fade = 0;
increasing = true;

subtract = 0;
transition = 1;

delay = 0.5 * room_speed;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if delay &gt; 0 {
    delay -= 1;
}

transition -= subtract;

if highscorePosted = false {
    if achievement_available() {
        if os_type = os_ios {
            achievement_post_score("com.tangentgamestudios.woblhighscores", global.highscore);
        } else {
            achievement_post_score("CgkIqKzBlf8QEAIQAA", global.highscore);
        }
        highscorePosted = true;
    }
}

if transition &lt;= 0 {
    room_goto(rm_title);
    with (obj_mainController) {
        timer = 1.5 * room_speed;
    }
}

if transition = 1 {
    if image_alpha &lt; 1 {
        image_alpha += 0.05;
    } else {
        image_alpha = 1;
    }
} else {
    image_alpha = transition;
}

if coinDelay &gt; 0 {
    coinDelay -= 1;
} else {
    if global.coinAdd &gt; 0 &amp;&amp; image_alpha &gt;= 0.8 &amp;&amp; obj_xpBar.xpAdd = 0 &amp;&amp; obj_xpBar.first = false {
        global.coinAdd -= 1;
        global.coins += 1;
    }
    if global.coinAdd = 0 {
        coinsCollected = 0;
        first = true;
    }
    coinDelay = 1;
}

if device_mouse_check_button_pressed(0, mb_left) &amp;&amp; delay = 0 {
    if first = true {
        subtract = 0.1;
    } else {
        first = true;
        global.coins = prevCoins + coinsCollected;
        global.coinAdd = 0;
        coinsCollected = 0;
    }
}

if global.coinAdd &lt;= 0 &amp;&amp; image_alpha &gt;= 0.8 &amp;&amp; transition = 1 {
    if fade = 0 {
        increasing = true;
    }
    if fade = fadeTime {
        increasing = false;
    }
    if increasing = true {
        fade += 1;
    } else {
        fade -= 1;
    }
}

/*if global.coinAdd &lt;= 0 &amp;&amp; adShown = false &amp;&amp; global.noads = false &amp;&amp; image_alpha = 1 {
    if global.plays &lt;= 0 &amp;&amp; GoogleMobileAds_InterstitialStatus() = "Ready" {
        GoogleMobileAds_ShowInterstitial();
        global.plays = choose(4, 5, 5);
        adShown = true;
    }
}*/

scr_save();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(image_alpha);
draw_set_halign(fa_center);

draw_set_font(ft_bigger);
draw_text(375, y - 435, global.points);

draw_set_font(ft_highscore);

draw_text(375, y - 91, "Highscore: " + string(global.highscore));

draw_set_valign(fa_center);
draw_set_halign(fa_left);

coinsWidth = string_width(string(global.coins));
symbolDraw = 375 - floor((58 + coinsWidth) / 2) + 21
draw_sprite(spr_coin, 0, symbolDraw, y + 29)
draw_text(symbolDraw + 37, y + 29, global.coins);

draw_set_valign(fa_top);
draw_set_halign(fa_center);

if global.coinAdd = 0 {
    draw_set_alpha(fade / fadeTime);
    draw_text(x, y + 357, "Tap to return");
}

draw_set_alpha(transition);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
